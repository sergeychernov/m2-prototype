import { useState } from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router'; // <--- –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∏–º–ø–æ—Ä—Ç

export default function ConnectToTelegram() {
  const [token, setToken] = useState('');
  const [status, setStatus] = useState('');
  const router = useRouter(); // <--- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ useRouter

  const checkToken = () => {
    const t = token.trim();
    if (!t) {
      setStatus('‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω.');
      return;
    }
    if (t.startsWith('123')) {
      setStatus('‚úÖ –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω!');
    } else {
      setStatus('‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω.');
    }
  };

  const connectBot = () => {
    const t = token.trim();
    if (!t) {
      setStatus('‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω.');
      return;
    }
    setStatus('üîó –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á—ë–Ω!');
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ–ª —É–≤–∏–¥–µ—Ç—å —Å—Ç–∞—Ç—É—Å
    setTimeout(() => {
      router.push('/telegram'); // <--- –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É /telegram
    }, 1000); // –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 1 —Å–µ–∫—É–Ω–¥—É (1000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥)
  };

  return (
    <>
      <Head>
        <title>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Telegram-–±–æ—Ç–∞</title>
      </Head>
      <div className="container">
        <h1>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Telegram-–±–æ—Ç–∞</h1>
        <p>
          –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ Telegram-–±–æ—Ç–∞ –≤{' '}
          <a href="https://t.me/BotFather" target="_blank" rel="noreferrer">
            @BotFather
          </a>{' '}
          –∏ –ø–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω. –í—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞ –∫ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–∏—Å—É.
        </p>
        <label htmlFor="token">–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞:</label>
        <input
          type="text"
          id="token"
          value={token}
          onChange={(e) => setToken(e.target.value)}
          placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç BotFather"
        />
        <button className="btn" onClick={checkToken}>
          –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω
        </button>
        <button className="btn" onClick={connectBot}>
          –ü–æ–¥–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞
        </button>
        <div id="status" className="status">
          {status}
        </div>
        <p className="note">
          –ü–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç –Ω–∞—á–Ω—ë—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤—Ö–æ–¥—è—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ Telegram. –í—ã –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∑–∂–µ.
        </p>
      </div>
      <style jsx>{`
        .container {
          max-width: 600px;
          margin: 40px auto;
          background-color: #fff;
          border-radius: 8px;
          padding: 30px;
          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }
        h1 {
          text-align: center;
          color: #333;
        }
        p {
          color: #555;
        }
        label {
          display: block;
          margin-top: 20px;
          font-weight: bold;
        }
        input[type='text'] {
          width: 100%;
          padding: 10px;
          margin-top: 5px;
          border-radius: 4px;
          border: 1px solid #ccc;
          font-size: 16px;
        }
        .btn {
          display: inline-block;
          margin-top: 20px;
          padding: 12px 20px;
          font-size: 16px;
          color: #fff;
          background-color: #4caf50;
          border: none;
          border-radius: 6px;
          cursor: pointer;
          text-align: center;
          margin-right: 10px;
        }
        .btn:hover {
          background-color: #45a049;
        }
        .note {
          margin-top: 20px;
          font-size: 14px;
          color: #777;
          text-align: center;
        }
        .status {
          margin-top: 15px;
          font-weight: bold;
          text-align: center;
        }
      `}</style>
    </>
  );
}
